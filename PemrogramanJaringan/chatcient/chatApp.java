/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chatapp;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.Reader;
import java.io.Writer;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


/**
 *
 * @author Nabilatul 'Arofah
 */
public class chatApp extends javax.swing.JFrame {
    Socket client; //class socket untuk client
    ServerSocket server; //class packet untuk server
    BufferedReader server_reader, client_reader; //buffer untuk membaca pesan
    BufferedWriter server_writer, client_writer; //buffer untuk mengirim pesan


    /**
     * Creates new form chatApp
     */
    public chatApp() {
        initComponents();
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                while(true){
                    try{
                        listMessage.add(server_reader.readLine());
                    } catch (IOException e){
                      Logger.getLogger(chatApp.class.getName()).log(Level.SEVERE, null, e);  
                    }
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        cboConnection = new javax.swing.JComboBox<>();
        btnconnect = new javax.swing.JButton();
        txtUser = new javax.swing.JTextField();
        listMessage = new java.awt.List();
        txtMessage = new javax.swing.JTextField();
        btnSend = new javax.swing.JButton();

        jButton1.setText("jButton1");

        jTextField1.setText("jTextField1");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cboConnection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Server", "Client" }));
        cboConnection.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboConnectionItemStateChanged(evt);
            }
        });

        btnconnect.setText("ON");
        btnconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnconnectActionPerformed(evt);
            }
        });

        txtUser.setText("Username");

        txtMessage.setText("Type a message");

        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(listMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cboConnection, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnconnect, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtUser))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSend, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboConnection, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnconnect, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(listMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMessage)
                    .addComponent(btnSend, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void client_connection() {
        try{
            String ip_address = JOptionPane.showInputDialog("Masukkan Alamat IP:");
            client = new Socket(ip_address, 2000);
            cboConnection.setEnabled(false);
            server_reader = new BufferedReader(new InputSteamReader(client.getInputStream()));
            server_writer = new BufferedWriter(new OutputStreamReader(client.getOutputStream()));
            btnconnect.setText("Putuskan");
        }catch (UnknownHostException e){
            System.err.println("Akses ke server gagal!");
            System.exit(-1);
        }catch (IOException e){
            Logger.getLogger(chatApp.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    
    private void read_connection(){
            try{
                try{
                    try {
                        server = new ServerSocket(2000);
                        this.setTitle("Mohon tunggu sebentar...");
                    } catch (IOException e) {
                        System.err.println("Gagal membuat server");
                        System.exit(-1);
                    }
                    client = server.accept();
                    this.setTitle("Terhubung ke " + client.getInetAddress());   
                } catch (IOException e){
                    System.err.println("Akeses ke server ditolak!");
                    System.exit(-1);
                }
                server_reader = new BufferedReader(new InputStreamReader(client.getInputStream()));
                server_writer = new BufferedWriter(new OutputStreamWriter(client.getOutputStream()));
            } catch (IOException e){
                System.err.println("Tidak dapat membaca pesan!");
                System.exit(-1);     
            }
        }
        
    private void disconnected_by_client(){
        try{
            client.close();
            server_reader.close();
            server_writer.close();
            cboConnection.setEnabled(true);
            btnconnect.setText("Hubungkan");
            
        } catch (IOException e) {
            Logger.getLogger(chatApp.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    
    private void stopped_by_server() throws IOException{
    try{
        server_reader.close();
        server_writer.close();
        btnconnect.setText("ON");
        this.setTitle("Terputus!");
        
    } catch (IOException e){
        Logger.getLogger(chatApp.class.getName()).log(Level.SEVERE, null, e);
    }
    }
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void cboConnectionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboConnectionItemStateChanged
        if (cboConnection.getSelectedItem().equals("Server")){
            btnconnect.setText("ON");
            txtUser.setText("Server");
        } else {
            btnconnect.setText("Menghubungkan!");
            txtUser.setText("Client");
        }
    }//GEN-LAST:event_cboConnectionItemStateChanged

    private void btnconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnconnectActionPerformed
         if (btnconnect.getText().equals("Hubungkan!")){
             btnconnect.setText("Putuskan!");
             
             Thread thread = new Thread((Runnable) this);
             thread.start();
         }
         else if(cboConnection.getSelectedItem().equals("Server")){
             btnconnect.setText("OFF");
             read_connection();
             Thread thread = new Thread((Runnable) this);
             thread.start();
         }
    }//GEN-LAST:event_btnconnectActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed

            try {
                server_writer.write(txtUser.getText() + ": " + txtMessage.getText());
            } catch (IOException ex) {
                Logger.getLogger(chatApp.class.getName()).log(Level.SEVERE, null, ex);
            }
            listMessage.add("Me: " + txtMessage.getText());
            txtMessage.setText("");
    }//GEN-LAST:event_btnSendActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(chatApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(chatApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(chatApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(chatApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        java.awt.EventQueue.invokeLater (new Runnable(){
            public void run(){
                chatApp ca = new chatApp ();
                ca.setVisible(true);
                ca.setLocationRelativeTo(null);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btnconnect;
    private javax.swing.JComboBox<String> cboConnection;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private java.awt.List listMessage;
    private javax.swing.JTextField txtMessage;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables

    private static class InputSteamReader extends Reader {

        public InputSteamReader(InputStream inputStream) {
        }

        @Override
        public int read(char[] cbuf, int off, int len) throws IOException {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public void close() throws IOException {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }
    }

    private static class OutputStreamReader extends Writer {

        public OutputStreamReader(OutputStream outputStream) {
        }

        @Override
        public void write(char[] cbuf, int off, int len) throws IOException {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public void flush() throws IOException {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        @Override
        public void close() throws IOException {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }
    }
}
